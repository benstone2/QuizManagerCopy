@page "/edit/{quizId:guid}"
@using QuizManager.Shared

<div class="container">

    @if (Layout.UserRole == UserRoles.Restricted)
    {
        <RestrictedUserAlert />
    }
    else if (Layout.UserRole == UserRoles.Viewer)
    {
        <ViewerUserAlert />
    }

    @if (Quiz != null)
    {
        <div class="jumbotron jumbotron-fluid">
            <div class="container">
                <h1 class="display-4"> @Quiz.Title </h1>
                <p class="lead"> @Quiz.Description </p>
            </div>
        </div>

        @if (Quiz.Questions.Count == 0)
        {
            <p> You haven't added any questions yet! </p>
        }
        else
        {
            <EditForm id="QuizForm" Model="Quiz" OnSubmit="HandleSaveQuiz">
                @foreach (var question in Quiz.Questions.OrderBy(q => q.QuestionNumber))
                {
                    <div class="card question-card @(question.Editing && !question.ContainsErrors ? "border-dark" : "") @(question.ContainsErrors ? "border-danger" : "")">
                        <div class="card-header">
                            <div style="display:flex">
                                <div class="align-middle" style="padding-right:5px">
                                    <strong> @(question.QuestionNumber). </strong>
                                </div>

                                @if (question.Editing == false)
                                {
                                    <div class="align-middle" style="flex-grow:1">
                                        @question.QuestionText
                                    </div>

                                    @if (Layout.UserRole == UserRoles.Editor)
                                    {
                                        <div class="btn-group" id="edit-question-group">
                                            <div class="btn btn-sm btn-secondary" @onclick="() => StartEditQuestion(question)" style="cursor:pointer"> <span class="oi oi-pencil align-middle"></span> </div>
                                            <div class="btn btn-sm btn-danger" @onclick="() => DeleteQuestion(question)" style="cursor:pointer"> <span class="oi oi-trash align-middle"></span> </div>
                                        </div>
                                    }

                                }
                                else
                                {
                                    <div style="flex-grow:1">
                                        <div class="input-group mb-3">
                                            <InputText id="text" class="form-control" @bind-Value="question.QuestionText" />

                                            @if (Layout.UserRole == UserRoles.Editor)
                                            {
                                                <div class="input-group-append">
                                                    <div class="btn btn-sm btn-success" @onclick="() => SaveQuestionChanges(question)"> <span class="oi oi-check align-middle"></span> </div>
                                                    <div class="btn btn-sm btn-danger" @onclick="() => DeleteQuestion(question)"> <span class="oi oi-trash align-middle"></span> </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        @if (Layout.UserRole != UserRoles.Restricted)
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var answer in question.Answers)
                                {
                                    <li class="list-group-item @(question.Editing ? "" : "list-group-item-light")">
                                        <div style="display:flex">
                                            <div class="align-middle" style="padding-right:5px">
                                                <strong> @(answer.AnswerNumber.Letter) </strong>
                                            </div>
                                            @if (answer.Editing)
                                            {
                                                <div class="input-group mb-3">
                                                    <InputText id="text" class="form-control" @bind-Value="answer.AnswerText" />

                                                    @if (Layout.UserRole == UserRoles.Editor)
                                                    {
                                                        <div class="input-group-append">
                                                            <div class="btn btn-success btn-sm align-middle" @onclick="() => SaveAnswer(answer)" style="cursor:pointer"> <span class="oi oi-check align-middle"></span> </div>
                                                            <div class="btn btn-danger btn-sm" @onclick="() => question.DeleteAnswer(answer)" style="cursor:pointer"> <span class="oi oi-trash align-middle"></span> </div>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <div style="flex-grow:1">
                                                    @answer.AnswerText
                                                </div>

                                                @if (question.Editing && Layout.UserRole == UserRoles.Editor)
                                                {
                                                    <div class="btn-group">
                                                        <div class="btn btn-secondary btn-sm" @onclick="() => EditAnswer(answer)" style="cursor:pointer"> <span class="oi oi-pencil"></span> </div>
                                                        <div class="btn btn-danger btn-sm" @onclick="() => question.DeleteAnswer(answer)" style="cursor:pointer"> <span class="oi oi-trash"></span> </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </li>
                                }

                                @if (question.Editing)
                                {
                                    <li class="list-group-item text-center">
                                        <div class="btn btn-success btn-sm" @onclick="question.AddAnswer" disabled="@(question.AddAnswersDisabled)" style="cursor:pointer"> + </div>
                                    </li>
                                }
                            </ul>
                        }
                        
                    </div>

                    <br />
                }

            </EditForm>
        }
    }


    <br /> <br />
</div>

@if (Layout.UserRole == UserRoles.Editor)
{
    <div class="footer fixed-bottom bg-light">
        <div class="container">
            <div class="row">
                <div class="col-6" style="padding:5px 15px">
                    <div class="btn btn-secondary btn-block" @onclick="AddQuestion" style="cursor:pointer"> Add question</div>
                </div>
                <div class="col-6" style="padding:5px 15px">
                    <button class="btn btn-success btn-block" type="submit" form="QuizForm"> Save </button>
                </div>
            </div>
        </div>
    </div>

    <ModalComponent @ref="Modal">
        <Title> Error </Title>
        <Body>
            <ul>
                @foreach (var error in Errors)
                {
                    <li> @error </li>
                }
            </ul>
        </Body>
    </ModalComponent>
}




